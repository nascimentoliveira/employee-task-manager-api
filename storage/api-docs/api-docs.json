{
    "openapi": "3.0.0",
    "info": {
        "title": "Employee Task Manager API",
        "description": "The Task and Employee Management API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/departments": {
            "get": {
                "tags": [
                    "Departments"
                ],
                "summary": "Returns a list of departments",
                "operationId": "da8820891dd6bf08713e9d77fbe6389f",
                "responses": {
                    "200": {
                        "description": "List of departments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Department"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Departments"
                ],
                "summary": "Create a new department",
                "operationId": "c0f48115550ccf6a76b43ff263bfc05c",
                "requestBody": {
                    "description": "Department object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DepartmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Department created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Department"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/departments/{id}": {
            "get": {
                "tags": [
                    "Departments"
                ],
                "summary": "Get a department by ID",
                "operationId": "ecdae8bd198987eca46831ced8777bba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the department",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Department"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Department not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Departments"
                ],
                "summary": "Update a department by ID",
                "operationId": "1d6fe343b0c809ce2a0722693aed793d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the department",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Department object that needs to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DepartmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Department details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Department"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Department not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Departments"
                ],
                "summary": "Delete a department by ID",
                "operationId": "5cc7aebc708fbbbeb04b81504f62b499",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the department",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Department deleted successfully"
                    },
                    "404": {
                        "description": "Department not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employees": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Returns a list of employees",
                "operationId": "7fc06f144c1cd7925c5c391a6609f02d",
                "responses": {
                    "200": {
                        "description": "List of employees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Employee"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Employees"
                ],
                "summary": "Create a new employee",
                "operationId": "bfad4edec29b0edbd684a0afbd847510",
                "requestBody": {
                    "description": "Employee object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Employee"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "firstName": [
                                                    "The firstName field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employees/{id}": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get a employee by ID",
                "operationId": "d53e117f7e819b6f063fc96ea910eb75",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Employee"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Employees"
                ],
                "summary": "Update a employee by ID",
                "operationId": "aab9bddc0c5cab0acc27a9d58b9cb2b0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Employee object that needs to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Employee"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "firstName": [
                                                    "The firstName field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Employees"
                ],
                "summary": "Delete a employee by ID",
                "operationId": "4743ab328b7641983d97c047c641038f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Employee deleted successfully"
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Returns a list of tasks",
                "operationId": "471d938a3bfaeb6fbd981d7c3e2728b0",
                "responses": {
                    "200": {
                        "description": "List of tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "f803ebdb2300acdb7e93bbe8d0b9a2e8",
                "requestBody": {
                    "description": "Task object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a task by ID",
                "operationId": "90b3cd4d2d4b416dc989d2055dbed06c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "TAsk not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a task by ID",
                "operationId": "1aaf37e74360ef4c10fadaee02ae77fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Task object that needs to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a task by ID",
                "operationId": "ad582480cd57c2a4e3b6a426943eeca5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Task deleted successfully"
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "PaginationMeta": {
                "title": "Pagination Meta",
                "description": "Pagination meta information",
                "properties": {
                    "current_page": {
                        "description": "Current page number",
                        "type": "integer",
                        "example": 3
                    },
                    "from": {
                        "description": "Starting record number",
                        "type": "integer",
                        "example": 31
                    },
                    "last_page": {
                        "description": "Last page number",
                        "type": "integer",
                        "example": 5
                    },
                    "path": {
                        "description": "URL of the current page",
                        "type": "string",
                        "example": "https://example.com/api/resource"
                    },
                    "per_page": {
                        "description": "Number of records per page",
                        "type": "integer",
                        "example": 15
                    },
                    "to": {
                        "description": "Ending record number",
                        "type": "integer",
                        "example": 45
                    },
                    "total": {
                        "description": "Total number of records",
                        "type": "integer",
                        "example": 15
                    }
                },
                "type": "object"
            },
            "PaginationLinks": {
                "title": "Pagination Links",
                "description": "Links to navigate between paginated results",
                "properties": {
                    "first": {
                        "description": "URL of the first page",
                        "type": "string",
                        "example": "https://example.com/api/resource?page=1"
                    },
                    "last": {
                        "description": "URL of the last page",
                        "type": "string",
                        "example": "https://example.com/api/resource?page=5"
                    },
                    "prev": {
                        "description": "URL of the previous page",
                        "type": "string",
                        "example": "https://example.com/api/resource?page=2"
                    },
                    "next": {
                        "description": "URL of the next page",
                        "type": "string",
                        "example": "https://example.com/api/resource?page=4"
                    }
                },
                "type": "object"
            },
            "NotFoundError": {
                "title": "Not Found Error",
                "description": "Response for resource not found errors",
                "properties": {
                    "error_code": {
                        "type": "integer",
                        "format": "int32",
                        "example": 404
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1678905678
                    },
                    "message": {
                        "type": "string",
                        "example": "Resource not found"
                    }
                },
                "type": "object"
            },
            "InternalServerError": {
                "title": "Internal Server Error",
                "description": "Response for internal server errors",
                "properties": {
                    "error_code": {
                        "type": "integer",
                        "format": "int32",
                        "example": 500
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1678905678
                    },
                    "message": {
                        "type": "string",
                        "example": "Internal server error"
                    }
                },
                "type": "object"
            },
            "Department": {
                "title": "Department",
                "description": "Department model representing a department entity.",
                "properties": {
                    "id": {
                        "description": "Department ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "name": {
                        "description": "Department name",
                        "type": "string",
                        "example": "HR Department"
                    },
                    "created_at": {
                        "description": "Department creation date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-08-01T01:41:44.000000Z"
                    },
                    "updated_at": {
                        "description": "Date of last department update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-08-01T02:15:10.000000Z"
                    }
                },
                "type": "object"
            },
            "DepartmentRequest": {
                "title": "Department Request",
                "description": "Department model for request body",
                "properties": {
                    "name": {
                        "description": "Department name",
                        "type": "string",
                        "example": "HR Department"
                    }
                },
                "type": "object"
            },
            "Employee": {
                "title": "Employee",
                "description": "Employee response model representing the data returned by the API.",
                "properties": {
                    "id": {
                        "description": "Employee ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "firstName": {
                        "description": "Employee's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "description": "Employee's last name",
                        "type": "string",
                        "example": "Doe"
                    },
                    "phone": {
                        "description": "Employee's phone number",
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "email": {
                        "description": "Employee's email address",
                        "type": "string",
                        "example": "john.doe2@example.com"
                    },
                    "department": {
                        "$ref": "#/components/schemas/Department"
                    },
                    "created_at": {
                        "description": "Employee creation date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-08-01T01:54:27.000000Z"
                    },
                    "updated_at": {
                        "description": "Date of last employee update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-08-05T23:01:07.000000Z"
                    }
                },
                "type": "object"
            },
            "EmployeeRequest": {
                "title": "Employee Request",
                "description": "Employee model for request body",
                "properties": {
                    "firstName": {
                        "description": "Employee's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "lastName": {
                        "description": "Employee's last name",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "description": "Employee's email address",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "description": "Employee's phone number (optional)",
                        "type": "string",
                        "example": "+1 (123) 456-7890"
                    },
                    "department_id": {
                        "description": "ID of the department to which the employee belongs",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Task": {
                "title": "Task",
                "description": "Task response model representing the data returned by the API.",
                "properties": {
                    "id": {
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "title": {
                        "description": "Task title",
                        "type": "string",
                        "example": "Complete Project Report"
                    },
                    "description": {
                        "description": "Task description",
                        "type": "string",
                        "example": "Finish writing the project report"
                    },
                    "assign": {
                        "$ref": "#/components/schemas/Employee"
                    },
                    "due_date": {
                        "description": "Task due date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-08-15 10:00:00"
                    },
                    "created_at": {
                        "description": "Task creation date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-08-06T00:03:30.000000Z"
                    },
                    "updated_at": {
                        "description": "Date of last task update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-08-06T00:03:30.000000Z"
                    }
                },
                "type": "object"
            },
            "TaskRequest": {
                "title": "Task Request",
                "description": "Task model for request body",
                "properties": {
                    "title": {
                        "description": "Task title",
                        "type": "string",
                        "example": "Complete Project Report"
                    },
                    "description": {
                        "description": "Task description (optional)",
                        "type": "string",
                        "example": "Finish writing the project report"
                    },
                    "assignee_id": {
                        "description": "ID of the assigned employee",
                        "type": "integer",
                        "format": "int64",
                        "example": "1"
                    },
                    "due_date": {
                        "description": "Due date for the task (optional)",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-08-15T10:00:00Z"
                    }
                },
                "type": "object"
            }
        }
    }
}